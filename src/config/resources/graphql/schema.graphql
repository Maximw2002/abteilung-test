# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Abteilungsdaten zu lesen"
type Query {
  buecher(suchkriterien: SuchkriterienInput): [Abteilung!]

  abteilung(id: ID!): Abteilung
}

"Funktionen, um Abteilungen neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: AbteilungInput!): CreatePayload

  update(input: AbteilungUpdateInput!): UpdatePayload

  delete(id: ID!): Boolean

  # Mutation, wenn z.B. der Login-Zeitpunkt im IDM-System gespeichert wird
  login(username: String!, password: String!): LoginResult
  refresh(refresh_token: String!): LoginResult
}

"Daten zum Abteilungsleiter einer Abteilung"
type Abteilungsleiter {
  abteilungsleiter: String!
  vorname: String
}

"Daten zum Abteilungsleiter einer Abteilung"
type Mitarbeiter {
  name: String!
  jobType: String
}

"Datenschema zu einer Abteilung, die gelesen wird"
type Abteilung {
  # ID ist bei Apollo ein String
  id: Int!
  version: Int!
  bueroNummer: String!
  zufriedenheit: Int
  art: Art
  budget: Float!
  verfuegbar: Boolean
  gruendungsDatum: String
  homepage: String
  schlagwoerter: [String]
  # 1:1-Beziehung
  abteilungsleiter: Abteilungsleiter!
  # field mit @ResolveField
  krankenstandsQuote(short: Boolean): String!
}

"Enum-Typ für die Art einer Abteilung"
enum Art {
  ENTWICKLUNG
  VERTRIEB
}

"Suchkriterien für Abteilungen"
input SuchkriterienInput {
  abteilungsleiter: String
  bueroNummer: String
  zufriedenheit: Int
  art: Art
  verfuegbar: Boolean
}

"Daten zum Abteilungsleiter einer neuen Abteilung"
input AbteilungsleiterInput {
  abteilungsleiter: String!
  vorname: String
}

"Daten zu den Mitarbeitern einer Abteilung"
input MitarbeiterInput {
  name: String!
  jobType: String!
}

"Daten für eine neue Abteilung"
input AbteilungInput {
  bueroNummer: String
  zufriedenheit: Int
  art: Art
  budget: Float
  krankenstandsQuote: Float
  verfuegbar: Boolean
  gruendungsDatum: String
  homepage: String
  schlagwoerter: [String]
  abteilungsleiter: AbteilungsleiterInput!
  vieleMitarbeiter: [MitarbeiterInput!]
}

type CreatePayload {
  id: Int
}

"Daten für eine zu ändernde Abteilung"
input AbteilungUpdateInput {
  id: ID
  version: Int
  bueroNummer: String
  zufriedenheit: Int
  art: Art
  budget: Float
  krankenstandsQuote: Float
  verfuegbar: Boolean
  gruendungsDatum: String
  homepage: String
  schlagwoerter: [String]
}

type UpdatePayload {
  version: Int
}

type LoginResult {
  access_token: String!
  expires_in: Int!
  refresh_token: String!
  refresh_expires_in: Int!
  roles: [String!]
}
